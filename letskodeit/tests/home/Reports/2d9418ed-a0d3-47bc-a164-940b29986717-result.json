{"name": "test_validLogin", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <tests.home.test_login.LoginTests testMethod=test_validLogin>\n\n    @pytest.mark.run(order=2)\n    def test_validLogin(self):\n        self.lp.login(\"test@email.com\", \"abcabc\")\n        result1 = self.lp.verifyLoginTitle()\n        self.ts.mark(result1, \"Title Verification\")\n        result2 = self.lp.verifyLoginSuccessful()\n>       self.ts.markFinal(\"test_validLogin\", result2, \"Login Verification\")\n\ntest_login.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x000001F078D30EB8>, testName = 'test_validLogin', result = False, resultMessage = 'Login Verification'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName +  \" ### TEST FAILED\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n..\\..\\utilities\\teststatus.py:63: AssertionError"}, "attachments": [{"name": "log", "source": "8bb5109f-75ac-4e00-9921-945c24f8c9b0-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "ded3b81b-e111-4c17-ad0a-544e958f9bee-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "5d22a9cf-6af5-4376-86be-8ab311f31ef9-attachment.txt", "type": "text/plain"}], "start": 1599032420637, "stop": 1599032436446, "uuid": "d026cbd5-46b1-408f-a3fe-ef1f79d2afb9", "historyId": "51017a724c3646fc428aa95e640da08b", "testCaseId": "ec950c98b4dfed9487d6e25c1ef9e49f", "fullName": "test_login.LoginTests#test_validLogin", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"}, {"name": "tag", "value": "run(order=2)"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "LoginTests"}, {"name": "host", "value": "DESKTOP-1LDCU8B"}, {"name": "thread", "value": "14388-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}