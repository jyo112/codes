{
  "uid" : "9063e34e69b7b663",
  "name" : "test_validLogin",
  "fullName" : "tests.home.test_login.LoginTests#test_validLogin",
  "historyId" : "80c51dfd5f134294812b6d779e500661",
  "time" : {
    "start" : 1599032550908,
    "stop" : 1599032553478,
    "duration" : 2570
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <tests.home.test_login.LoginTests testMethod=test_validLogin>\n\n    @pytest.mark.run(order=2)\n    def test_validLogin(self):\n        self.lp.login(\"test@email.com\", \"abcabc\")\n        result1 = self.lp.verifyLoginTitle()\n        self.ts.mark(result1, \"Title Verification\")\n        result2 = self.lp.verifyLoginSuccessful()\n>       self.ts.markFinal(\"test_validLogin\", result2, \"Login Verification\")\n\ntest_login.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x000002019F60B048>, testName = 'test_validLogin', result = False, resultMessage = 'Login Verification'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName +  \" ### TEST FAILED\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n..\\..\\utilities\\teststatus.py:63: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1599032523443,
      "stop" : 1599032523443,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1599032523443,
      "stop" : 1599032523443,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "classSetup",
    "time" : {
      "start" : 1599032550907,
      "stop" : 1599032550907,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "setUp",
    "time" : {
      "start" : 1599032550907,
      "stop" : 1599032550907,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "oneTimeSetUp",
    "time" : {
      "start" : 1599032523443,
      "stop" : 1599032535701,
      "duration" : 12258
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <tests.home.test_login.LoginTests testMethod=test_validLogin>\n\n    @pytest.mark.run(order=2)\n    def test_validLogin(self):\n        self.lp.login(\"test@email.com\", \"abcabc\")\n        result1 = self.lp.verifyLoginTitle()\n        self.ts.mark(result1, \"Title Verification\")\n        result2 = self.lp.verifyLoginSuccessful()\n>       self.ts.markFinal(\"test_validLogin\", result2, \"Login Verification\")\n\ntest_login.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x000002019F60B048>, testName = 'test_validLogin', result = False, resultMessage = 'Login Verification'\n\n    def markFinal(self, testName, result, resultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, resultMessage)\n    \n        if \"FAIL\" in self.resultList:\n            self.log.error(testName +  \" ### TEST FAILED\")\n            self.resultList.clear()\n>           assert True == False\nE           AssertionError\n\n..\\..\\utilities\\teststatus.py:63: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "fa94d0af14ac8350",
      "name" : "log",
      "source" : "fa94d0af14ac8350.txt",
      "type" : "text/plain",
      "size" : 1789
    }, {
      "uid" : "52bdcfa7b7586a8a",
      "name" : "stdout",
      "source" : "52bdcfa7b7586a8a.txt",
      "type" : "text/plain",
      "size" : 83
    }, {
      "uid" : "6759f952be14c53c",
      "name" : "stderr",
      "source" : "6759f952be14c53c.txt",
      "type" : "text/plain",
      "size" : 44022
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1599032557178,
      "stop" : 1599032557178,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "setUp::0",
    "time" : {
      "start" : 1599032553510,
      "stop" : 1599032553515,
      "duration" : 5
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "oneTimeSetUp::0",
    "time" : {
      "start" : 1599032553519,
      "stop" : 1599032557176,
      "duration" : 3657
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "run(order=2)"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"
  }, {
    "name" : "parentSuite",
    "value" : "tests.home"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "LoginTests"
  }, {
    "name" : "host",
    "value" : "DESKTOP-1LDCU8B"
  }, {
    "name" : "thread",
    "value" : "12816-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.home.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=2)", "@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')" ]
  },
  "source" : "9063e34e69b7b663.json",
  "parameterValues" : [ ]
}